class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) 
    {
        int n = image.size();
        int m = image[0].size();
        queue<pair<int,int>> q;
        int c = image[sr][sc];
        image[sr][sc] = newColor;
        q.push({sr,sc});
        vector<vector<int>> v(n,vector<int>(m,1));
        v[sr][sc]=0;
        while(!q.empty())
        {
            int t = q.size();
            for(int i=0; i<t; i++)
            {
                int x = q.front().first;
                int y = q.front().second;
                q.pop();
                if(x-1>=0 && image[x-1][y]==c && v[x-1][y])
                {
                    image[x-1][y]=newColor;
                    q.push({x-1,y});
                    v[x-1][y]=0;
                }
                if(x+1<n && image[x+1][y]==c && v[x+1][y])
                {
                    image[x+1][y]=newColor;
                    q.push({x+1,y});
                    v[x+1][y]=0;
                }
                if(y-1>=0 && image[x][y-1]==c && v[x][y-1])
                {
                    image[x][y-1]=newColor;
                    q.push({x,y-1});
                    v[x][y-1]=0;
                }
                if(y+1<m && image[x][y+1]==c && v[x][y+1])
                {
                    image[x][y+1]=newColor;
                    q.push({x,y+1});
                    v[x][y+1]=0;
                }
            }
        }
        return image;
    }
};
