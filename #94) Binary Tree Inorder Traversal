/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

//  https://leetcode.com/problems/binary-tree-inorder-traversal/submissions/


class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) 
    {
        vector<int> res;
        stack<TreeNode*> st;
        if(root) st.push(root);
        else return res;
        TreeNode* temp = root->left;
        while(1)
        {
            if(st.empty() && temp==NULL) break;
            if(temp)
            {
                st.push(temp);
                temp = temp->left;
            }
            else
            {
                temp = st.top();
                st.pop();
                res.push_back(temp->val);
                temp = temp->right;
            }
        }
        return res;
    }
};
