//  https://leetcode.com/problems/top-k-frequent-elements/submissions/

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) 
    {
        int n = nums.size();
        unordered_map<int,int> um;
        for(auto e:nums) um[e]++;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        for(auto itr:um)
        {
            pair<int,int> p = {itr.second,itr.first};
            pq.push(p);
            if(pq.size()>k) pq.pop();
        }
        vector<int> res;
        while(pq.size())
        {
            res.push_back(pq.top().second);
            pq.pop();
        }
        return res;
    }
};
