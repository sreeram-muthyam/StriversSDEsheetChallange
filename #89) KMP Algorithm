#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution
{
    public:
        vector<int> buildlps(string p, int m)
    {
        int len=0;
        int i=1;
        vector<int> lps(m,0);
        lps[0]=0;
        while(i<m)
        {
            if(p[i]==p[len])
            {
                lps[i]=len+1;
                i++;
                len++;
            }
            else
            {
                if(len!=0)
                {
                    len = lps[len-1];
                }
                else
                {
                    i++;
                }
            }
        }
        return lps;
    }
    
        vector <int> search(string p, string t)
        {
            //code hee.
            vector<int> res;
            int n=t.length();
            int m=p.length();
            int i=0;
            int j=0;
            vector<int> lps(m,0);
            lps = buildlps(p,m);
            while(i<n)
            {
                if(t[i]==p[j])
                {
                    i++;
                    j++;
                }
                else
                {
                    if(j!=0) j=lps[j-1];
                    else i++;
                }
                if(j==m)
                {
                    res.push_back(i-j+1);
                    j=lps[j-1];
                }
            }
            if(res.size()==0) res.push_back(-1);
            return res;
        }
     
};

// { Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string S, pat;
        cin >> S >> pat;
        Solution ob;
        vector <int> res = ob.search(pat, S);
        if (res.size()==0)
            cout<<-1<<endl;
        else {
            for (int i : res) cout << i << " ";
            cout << endl;
        }
    }
    return 0;
}

// Contributed By: Pranay Bansal
  // } Driver Code Ends
