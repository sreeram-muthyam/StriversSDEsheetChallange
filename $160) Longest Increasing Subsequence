class Solution {
public:
    int lengthOfLIS(vector<int>& nums) 
    {
        int n=nums.size();
        // vector<int> dp(n,1);
        // int ans=1;
        // for(int i=0; i<n; i++)
        // {
        //     for(int j=0; j<i; j++)
        //     {
        //         if(nums[i]>nums[j])
        //         {
        //             dp[i] = max(dp[i],1+dp[j]);
        //         }
        //     }
        //     ans = max(ans,dp[i]);
        // }
        // return ans;
        
        
        if(n==0) return 0;
        vector<int> lis;
        lis.push_back(nums[0]);
        for(int i=1; i<n; i++)
        {
            if(nums[i]>lis.back())
            {
                lis.push_back(nums[i]);
            }
            else
            {
                int ind = lower_bound(lis.begin(),lis.end(),nums[i])-lis.begin();
                lis[ind] = nums[i];
            }
        }
        return lis.size();
    }
};
