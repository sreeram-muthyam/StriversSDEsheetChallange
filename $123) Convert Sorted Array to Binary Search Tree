/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* helper(vector<int> &nums, int i, int j)
    {
        if(i>j) return NULL;
        int m = (i+j)/2;
        TreeNode* node = new TreeNode(nums[m]);
        node->left = helper(nums,i,m-1);
        node->right = helper(nums,m+1,j);
        return node;
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) 
    {
        int n = nums.size();
        return helper(nums,0,n-1);
    }
};
