/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {
        vector<vector<int>> res;
        if(!root) return res;
        bool LTR=true;
        stack<TreeNode*> curr, next;
        curr.push(root);
        while(!curr.empty())
        {
            int n = curr.size();
            vector<int> v;
            for(int i=0; i<n; i++)
            {
                TreeNode* temp = curr.top();
                curr.pop();
                v.push_back(temp->val);
                if(LTR)
                {
                    if(temp->left)
                    {
                        next.push(temp->left);
                    }
                    if(temp->right)
                    {
                        next.push(temp->right);
                    }
                }
                else
                {
                    if(temp->right)
                    {
                        next.push(temp->right);
                    }
                    if(temp->left)
                    {
                        next.push(temp->left);
                    }
                }
            }
            swap(curr,next);
            LTR = !LTR;
            res.push_back(v);
        }
        return res;
    }
};
