/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int idx;
    
    TreeNode* helper(vector<int> &in, vector<int> &po, int i, int j, int n)
    {
        if(i==n || i>j) return NULL;
        int k;
        for(int l=i; l<=j; l++) if(in[l]==po[idx]) k=l;
        idx--;
        TreeNode* node = new TreeNode(in[k]);
        node->right = helper(in,po,k+1,j,n);
        node->left = helper(in,po,i,k-1,n);
        return node;
    }
    
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int n = inorder.size();
        idx=n-1;
        return helper(inorder,postorder,0,n-1,n);
    }
};
