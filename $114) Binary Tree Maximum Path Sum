/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int res;
    int maxi;
    int f = 0;
    
    int helper(TreeNode* root)
    {
        if(root==NULL) return 0;
        if(root->val==0) f++;
        maxi = max(maxi,root->val);
        int l = helper(root->left);
        int r = helper(root->right);
        int ans = max({0,root->val,root->val+max(l,r)});
        int a = max({0,root->val+l+r,root->val+l,root->val+r,root->val});
        res = max(a,res);
        return ans;
    }
    
    int maxPathSum(TreeNode* root) 
    {
        res = 0;
        maxi = INT_MIN;
        helper(root);
        if(res==0)
        {
            if(f>0) return 0;
            return maxi;
        }
        return res;
    }
};
