/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

//  https://leetcode.com/problems/add-two-numbers/

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        ListNode* dummy = new ListNode();
        ListNode* temp = dummy;
        int carry = 0;
        while(l1 && l2)
        {
            ListNode* n = new ListNode((l1->val+l2->val+carry)%10);
            carry = (l1->val+l2->val+carry)/10;
            temp->next = n;
            temp = temp->next;
            l1 = l1->next;
            l2 = l2->next;
        }
         while(l1)
        {
            ListNode* n = new ListNode((l1->val+carry)%10);
            carry = (l1->val+carry)/10;
            temp->next = n;
            temp = temp->next;
             l1 = l1->next;
        }
         while(l2)
        {
            ListNode* n = new ListNode((l2->val+carry)%10);
            carry = (l2->val+carry)/10;
            temp->next = n;
            temp = temp->next;
             l2 = l2->next;
        }
        if(carry>0)
        {
            temp->next = new ListNode(carry);
        }
        temp = dummy->next;
        delete dummy;
        return temp;
    }
};
